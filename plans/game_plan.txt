Here's some psudocode for a game:

Game
    Inning
        Side
            At-Bat
                Pitch
                    Actions

Most of the "game" happens in a single pitch; everything else is bookkeeping. Let's walk through the process.



A pitch has the following process:
- runners on base set leadoff distances
- pitcher+catcher decide if pickoff attempt
- runners decide if they want to go for a blatant steal
- opening for heckles and cheers
- commit to pitch

0. the batter decides if any special hits
1. the catcher+pitcher decides the pitch location and type
2. the pitcher throws the ball
3. the batter decides swing / no swing
4. if swing: decide if hit, and how good the contact is
5. if hit: convert contact into power and control, then decide launch angle and power
6. go into play (if hit)


Position on base is 0-1
time is measured in seconds, as float

oe: offensive edge, b: batter, r: runners (inc. batters)
de: defensive edge, p: pitcher, c: catcher, f: fielder


*** runners on base set leadoff distances

bravery sets desired leadoff, but
strat gives runners additional leadoff based on the battery's awareness.

MLB leadoffs are about 10 feet on a 90 foot basepath, so for us it's like,
0.05 - 0.15

contributing stats:
r[bravery], oe[strategy], p[awe]
range:
0.05 - 0.20 bounded

base leadoff is bravery * 0.1 + 0.05

awe is based on catcher and pitcher awe; but mostly catcher.
so 2*catcher+pitcher for a number in range 0-6, with average 1.5 and good 3.
subtract 1.5 to get "normalized awareness", from -1.5 - 4.5 with average 0 and good 1.5

you only know this via strategy, so scale again by multiplying by strategy to get -3 - 9,
with average 0 and good 1.5 (0v1: -3, 1v0: 0)

scale this number by 0.1 and subtract it from 1 (1.3 - 0.1, av 0, good 0.85)
this is your leadoff modifier

so in total, leadoff is:
leadoff_modifier = ((2*c[awe] + 1*p[awe]) - 1.5)*strategy*0.1
(r[bravery] + 0.5) * (1 - leadoff_modifier)

fuzz it by 0.95 + rand()*0.1  (0.95 - 1.05)

*** pitcher+catcher decide if pickoff attempt



decide based on leadoffs, battery awareness
MLB success rates are in the 3-5%, possibly not even worth it



*** runners decide if they want to go for a blatant steal
*super rare* but funny
probably need to be bravery > 1 to even think about it?

*** opening for heckles and cheers
minor modifications, but come up a fair few times

*** commit to pitch

*** 0. batter decides if any special hits:

Based on base position, the batter will decide the following:
a: should I bunt (or other specialties)
b: where do I want to hit
c: how much do I want to swing

higher control batters will accept wider angles, including down the middle, whereas low control will pull
for slightly left

1: catcher+pitcher decides pitch location and type:
a: should I use special abilities (TBR)
b: set location based on count, game state, batter moxie, and pitcher accuracy


*** 2. pitcher throws the ball

A pitch has three aspects:
- difficulty
- reduction
- location

location is based on the set location (from step 1), plus the pitcher's [accuracy] roll

difficulty is created from multiple factors, but the primary two are:
the pitcher's [force] roll
the location (further out is harder)

reduction is based on the pitcher's [trickery] roll

*** 3. Batter decides to swing / no swing

the pitch's location is fuzzed by a pitcher's [trickery] roll and the inverse of the player's [discipline]
roll. It is then compared to the batter's set threshold determined in step 0, and the batter decides to swing
or no swing.

*** 4. Decide if hit, and how good the contact is

To decide a hit: the batter's [contact] vs. pitch difficulty
The better these compare, the better the hit quality is.

the batter's [power] adds to hit distance, and the batter's [control] adds effects - such as ground bias,
pop bias, left/right bias. any special effects (from hit goals) also apply here.

This gives us:
- distance
- xangle
- yangle

which can translate into:
- xangle
- flight time
- velocity

which can then translate into fielding (check for HRs first tho)




HOW DOES FIELDING WORK:
- draw the baseball line
- id fielders
- roll to intercept, get time and position
- calculate throw to each base timing
- for each runner, calculate position based on speed, timing, bravery, decide go/nogo
- fielder decides target, makes throw
- roll to catch, mark runner out if needed, advance all runners
- if error: go to 0, if success, go to 3

this is basically your first plan lmao



OK fielding breakdown, the simplest case: a pickoff.

in MLB:
pickoff time is 1.3 - 1.5 seconds.
average reaction is 0.9
average speed is 0.038 s/ft
average pickoff response is 1.27 seconds
so mean is 1.2, +2 stdv (95%) is 1.4; stdv is 0.1 :chefkiss:

throw speed is 80 mph - 100 mph, so 0.0085 - 0.0068 seconds per feet

distance from mound to a base is about 60 ft, or 0.4 - 0.51 seconds fly time
meaning pickoff time is 0.9 - 1.0 ish


start from "calculate throw to each base timing"

it's a pickoff, so instead of p[react] we use p[awe]

pickoff timing is p[awe] + p[throw] * distance % scaling factors:
1.1 - 0.1*p[awe] + (0.01 - 0.0025 * p[force]) * 60 (ft)
this is (1.7 / 1.575 / 1.45 / 1.2)


for each runner, calculate position based on speed, timing, bravery, decide go/nogo

we have 1 runner on first:
reaction time is 1 - 0.1 * r[timing] (1 / 0.9 / 0.8)
speed is 0.05 - r[speed]*0.015 (0.050 / 0.0425 / 0.035 / 0.020)

assume a 10 foot leadoff:
runner looks forward: 80 * 0.035 + 0.9 = 3.7  FALSE
runner looks backwards: 10 * 0.035 + 0.9 = 1.25  TRUE
decides nogo, with margin of 1.575 - 1.25 = 0.35
(you need to fuzz this some!)
(note that vs a 10* battery, the 5* runner gets thrown out more than half the time!
but the 5* runner won't take a long lead unless strategy is really bad)


fielder decides target:
runner on first is NOGO with margin of 0.35
XYZZY: go/nogo decisions should get fuzzed by strategy, bravery

this is the lowest margin, so they take it anyway - target is FIRST BASE


make throw:

throwing probability uses the THROW FUZZER:
a normal distribution with mean -3 and stdev 1.7, roll UNDER (d[throwing] + d[grab]) / 2
this makes an error % of (3.41 / 1.98 / 0.93 / 0.16)

XYZZY: THROW FUZZER NEEDS A TERM FOR DISTANCE

pickoff uses the PICKOFF FUZZER: + norm(0, 0.2)

four things can happen:
1. the runner is slightly faster than the pickoff, but the pickoff is good:
- safe
2. the runner is slightly slower than the pickoff, and the pickoff is good:
- out
3. the runner is slightly slower than the pickoff, but the fielder makes an error:
- safe, with the possibility of a steal
4. the runner is a lot slower than the pickoff or decides to go for it
- rundown!



# this is all just for leadoffs and pickoffs ;~;


BLATANT STEALS

these should be rare and highly coupled to bravery
using our model:

- calculate throw to each base timing
because this is a blatant steal, we need to use p[awe] + p[reaction]

- for each runner, calculate position based on speed, timing, bravery, and decide go/nogo
so we can just use this logic here to allow for blatant steals: players all get a chance
to go, and the pitcher already has the logic set up

a player with a wildly high bravery can actually just blatantly steal and win
the rundown repeatedly, and I think that's perfect.



RUNDOWNS:

rundowns are a special case when:
a. a player is caught on the basepaths
b. both go and nogo are valid options
c. no other runners are higher priority

a rundown is a sacred duel between the runner and the basist.
the runner is alone, save for their BRAVERY.
the basist is backed up - by the shortstop, other basist, and pitcher.
in the back field, other runners can attempt to steal - depending on their
runner's abilities.

it's a little inset RPG where the runner and the basist duel
as the basist succeeds, their runners can advance and they can defeeat the supporting
characters and possibly even the basist themselves (resulting in a safe)


COMMIT TO PITCH

whoaaaa deep breath

BATTER DECIDES IF ANY SPECIAL EFFECTS
1st, batter decides if special technique. Right now, that's just bunting:

bunting is better when:
- player has high control
- player is fast
- 3rd basist is bad and your strat rating is high

- player has bad contact and power
- pitcher has high force or trickery

bunt trades a TON of power for a massive control multiplier and a bunch of contact


IDEA: play doesn't end at 3rd out, but instead you have to chase all the fielders down
XB is much, much more biased towards small ball and running



THE HIT ROLL

Working backwards:

If the hitter hits the ball, we determine distance, launch angle, and field angle.

launch angle and field angle are based on control, and are two separate rolls
distance is based on power and is a third roll

the mean of these rolls is set by the hit quality rating - a single number that
determines how good a hit is.

hit quality is a number based on contact, pitch difficulty, and pitch negation:

roll contact vs pitch difficulty, apply negation modifier (as a second roll?)
- remember: normal distributions can only be slid and expanded

pitch negation is based on trickery

pitch difficulty is based on force and location

location is based on the designated target and an accuracy roll

force is hard to get up. any pitcher can go for location, but it results in more balls

it's a strategy call how bad balls are vs. hits;

trickery also makes it harder to read


working forwards:

CATCHER+PITCHER DECIDE PITCH LOCATION AND TYPE

the stronger a batter, the further outside you want to aim.

the further ahead you are, the further outside you want to aim.

knowing accuracy is a normal distribution, you can figure the ideal pitch location
based on probability and cost of walk vs cost of hit

but strategy and calling make that


PITCH TYPES:

pitch types trade force, trickiness, and accuracy.

a hitter with :
poor discipline should get tricky pitches, alternating outside and inside the zone
poor contact should get fast pitches right down the center
poor power should get tricky pitches to bring the power down further

