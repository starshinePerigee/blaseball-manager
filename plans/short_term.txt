add the ability to have a game-less gamestate

move messenger sends into subclasses
decouple bases and pitchmanager?
- pitchmanager and fielding are independent modules connected by messenger?
(are we trending towards removing pitchmanager entirely? just messenger sends?)

pull foul handling into HitBall out of Swing

remove statsmonitor

finish adding tracking stats
convert all blaseball to use s.stats
add expected min / low / ave / high / max / lowlim / highlim to Stat
add validity check to stats (require 100 hits for hit rate, for instance)
use the above for unit testing


coarse balance pass

revise some stats?

settle on an import style
remove Typing dependency


add additional fielding descriptions
fix pitch descriptors (mph and type)
write hit descriptors
add/fix spacers and stat dumps
write balance tests
review converting some module methods to staticmethods?

pull single module run code

create git tag

to consider:
- which classes persist vs. which are destroy and remake / which are passed around?
- basepaths is being managed in two places and that sucks
- convert stats list from strings to enum or pull from class directly?


refactor private methods/members into private


leaving this here: https://pypi.org/project/inflect/


THE PROCESS
- questions
- options outline
- prototype
- choose option
- code outline
- copy docs
- write tests
- fill code
- pass tests
- refactor